// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String   @unique
  username    String
  lastname    String
  rol         String
  avatar      String?
  active_user Boolean
  createdAt   DateTime @default(now())
  updatesAt   DateTime @updatedAt
}

model Drivers {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  username           String
  lastname           String
  cedula             Int
  phone              Int
  email              String
  performance_driver String
  history_travel     Travel[]
  tasks              Tasks[]
}

model Tasks {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  type        String
  state       String
  description String
  driverId    String  @db.ObjectId
  driver      Drivers @relation(fields: [driverId], references: [id])
}

model Travel {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  distance    String
  origin      String
  destination String
  stops       Stop[]
  truckId     String  @db.ObjectId
  driverId    String  @db.ObjectId
  truck       Truck   @relation(fields: [truckId], references: [id])
  driver      Drivers @relation(fields: [driverId], references: [id])
}

model Stop {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  direction String
  latitude  String
  longitude String
  travelId  String @db.ObjectId
  travel    Travel @relation(fields: [travelId], references: [id])
}

model Truck {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  plate                String
  color                String
  rotation_programming DateTime
  fuel_consumption     String
  maintenance          Total_maintenance[]
  trip_history         Travel[]
  tires                Tires[]
  fuelId               String              @unique @db.ObjectId
  availabilityId       String              @unique @db.ObjectId
  checklistId          String              @unique @db.ObjectId
  fuel                 Fuel?               @relation("TruckFuel")
  availability         Availability?       @relation("TruckAvailability")
  checklist            Checklist?          @relation("TruckChecklist")
}

model Checklist {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  coolant       String
  oil_level     String
  tire_pressure String
  lights        String
  truckId       String @unique @db.ObjectId
  truck         Truck  @relation("TruckChecklist", fields: [truckId], references: [id])
}

model Total_maintenance {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  repairs    String
  next_event String
  truckId    String @unique @db.ObjectId
  truck      Truck  @relation(fields: [truckId], references: [id])
}

model Availability {
  id                   String @id @default(auto()) @map("_id") @db.ObjectId
  mechanical_condition String
  fuel_level           String
  tire_pressure        String
  engine_performance   String
  truckId              String @unique @db.ObjectId
  truck                Truck  @relation("TruckAvailability", fields: [truckId], references: [id])
}

model Fuel {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  coast     String
  eficiency String
  truckId   String @unique @db.ObjectId
  truck     Truck  @relation("TruckFuel", fields: [truckId], references: [id])
}

model Tires {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  brand   String
  wear    String
  truckId String @unique @db.ObjectId
  truck   Truck  @relation(fields: [truckId], references: [id])
}